{
  "address": "0x0a459fb172F2639512814266f51d16672F5C02dc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "greetingSetter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newGreeting",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "premium",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GreetingChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "enum PayFusion.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        }
      ],
      "name": "savePreferences",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf046b1ff7cc53d50f8f2971b6eba42e141c042c896a707373718e86f955e5616",
  "receipt": {
    "to": null,
    "from": "0xD2692F9df925D18D527ABe8b3d99EE9E9C8d75AE",
    "contractAddress": "0x0a459fb172F2639512814266f51d16672F5C02dc",
    "transactionIndex": 0,
    "gasUsed": "9637303",
    "logsBloom": "0x
    "blockHash": "0xb7bafe467b78a66f2e60a9b81624cf8cb9e51369e69ba977a89da2a65dcdbeed",
    "transactionHash": "0xf046b1ff7cc53d50f8f2971b6eba42e141c042c896a707373718e86f955e5616",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 20704364,
        "transactionHash": "0xf046b1ff7cc53d50f8f2971b6eba42e141c042c896a707373718e86f955e5616",
        "address": "0x0a459fb172F2639512814266f51d16672F5C02dc",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d2692f9df925d18d527abe8b3d99ee9e9c8d75ae"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb7bafe467b78a66f2e60a9b81624cf8cb9e51369e69ba977a89da2a65dcdbeed"
      }
    ],
    "blockNumber": 20704364,
    "cumulativeGasUsed": "9637303",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD2692F9df925D18D527ABe8b3d99EE9E9C8d75AE"
  ],
  "numDeployments": 1,
  "solcInputHash": "ead066da1eb525eb5ed49cd33cdb22e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"greetingSetter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newGreeting\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"premium\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GreetingChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum PayFusion.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"}],\"name\":\"savePreferences\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"NightmareFox12\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PayFusion.sol\":\"PayFusion\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/PayFusion.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/**\\r\\n * @author NightmareFox12\\r\\n */\\r\\n\\r\\ncontract PayFusion is Ownable {\\r\\n    struct Order {\\r\\n        address creator;\\r\\n        uint256 chainId;\\r\\n        address token; // address(0) = Ether\\r\\n        Status status;\\r\\n    }\\r\\n\\r\\n    // State Variables\\r\\n    uint256 orderID;\\r\\n    mapping(address => string) emails;\\r\\n    mapping(uint256 => Order) public orders;\\r\\n\\r\\n    // Events\\r\\n    event GreetingChange(address indexed greetingSetter, string newGreeting, bool premium, uint256 value);\\r\\n\\r\\n    constructor(address _owner) Ownable(_owner) {}\\r\\n\\r\\n    function savePreferences(uint256 _chainId, address _token, string memory _email) public {\\r\\n        address creator = msg.sender;\\r\\n\\r\\n        if (bytes(_email).length > 0 && bytes(_email).length >= 5) {\\r\\n            emails[creator] = _email;\\r\\n        }\\r\\n\\r\\n        orders[orderID] = Order({ creator: creator, chainId: _chainId, token: _token, status: Status.Open });\\r\\n\\r\\n        // emit OrderCreated(newOrderId, msg.sender, chainId, token, amount);\\r\\n        // return newOrderId;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        uint256 balance = address(this).balance;\\r\\n        require(balance > 0, \\\"No funds\\\");\\r\\n\\r\\n        (bool success, ) = payable(owner()).call{ value: balance }(\\\"\\\");\\r\\n        require(success, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n\\r\\n    // Function that allows the contract to receive ETH\\r\\n    receive() external payable {}\\r\\n\\r\\n    // CHAT GPT\\r\\n    enum Status {\\r\\n        Open,\\r\\n        Completed,\\r\\n        Cancelled\\r\\n    }\\r\\n\\r\\n    // function createOrder(uint256 chainId, address token, uint256 amount) external returns (uint256) {\\r\\n    //     require(amount > 0, \\\"Monto debe ser > 0\\\");\\r\\n\\r\\n    //     _orderIds.increment();\\r\\n    //     uint256 newOrderId = _orderIds.current();\\r\\n\\r\\n    //     orders[newOrderId] = Order({\\r\\n    //         creator: msg.sender,\\r\\n    //         chainId: chainId,\\r\\n    //         token: token,\\r\\n    //         amount: amount,\\r\\n    //         status: Status.Open\\r\\n    //     });\\r\\n\\r\\n    //     emit OrderCreated(newOrderId, msg.sender, chainId, token, amount);\\r\\n    //     return newOrderId;\\r\\n    // }\\r\\n}\",\"keccak256\":\"0xedcb549eb57649249bcfbb21118c6000e440880791e68fe4d8402494136f09e5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161083b38038061083b83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b61073e806100fd6000396000f3fe6080604052600436106100595760003560e01c80630fac55b7146100655780633ccfd60b14610087578063715018a61461009c5780638da5cb5b146100b1578063a85c38ef146100de578063f2fde38b1461014157600080fd5b3661006057005b600080fd5b34801561007157600080fd5b50610085610080366004610457565b610161565b005b34801561009357600080fd5b50610085610272565b3480156100a857600080fd5b50610085610356565b3480156100bd57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b506101316100f9366004610522565b6003602052600090815260409020805460018201546002909201546001600160a01b039182169291811690600160a01b900460ff1684565b6040516100d59493929190610551565b34801561014d57600080fd5b5061008561015c36600461059d565b61036a565b805133901580159061017557506005825110155b1561019e576001600160a01b038116600090815260026020526040902061019c8382610648565b505b6040518060800160405280826001600160a01b03168152602001858152602001846001600160a01b03168152602001600060028111156101e0576101e061053b565b905260018054600090815260036020908152604091829020845181546001600160a01b03199081166001600160a01b039283161783559286015194820194909455918401516002808401805493841692909516918217855560608601519394926001600160a81b03191690911790600160a01b9084908111156102655761026561053b565b0217905550505050505050565b61027a6103a8565b47806102b85760405162461bcd60e51b81526020600482015260086024820152674e6f2066756e647360c01b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114610305576040519150601f19603f3d011682016040523d82523d6000602084013e61030a565b606091505b50509050806103525760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016102af565b5050565b61035e6103a8565b61036860006103d5565b565b6103726103a8565b6001600160a01b03811661039c57604051631e4fbdf760e01b8152600060048201526024016102af565b6103a5816103d5565b50565b6000546001600160a01b031633146103685760405163118cdaa760e01b81523360048201526024016102af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461043c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561046c57600080fd5b8335925061047c60208501610425565b9150604084013567ffffffffffffffff8082111561049957600080fd5b818601915086601f8301126104ad57600080fd5b8135818111156104bf576104bf610441565b604051601f8201601f19908116603f011681019083821181831017156104e7576104e7610441565b8160405282815289602084870101111561050057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561053457600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385811682526020820185905283166040820152608081016003831061058e57634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b6000602082840312156105af57600080fd5b6105b882610425565b9392505050565b600181811c908216806105d357607f821691505b6020821081036105f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561064357600081815260208120601f850160051c810160208610156106205750805b601f850160051c820191505b8181101561063f5782815560010161062c565b5050505b505050565b815167ffffffffffffffff81111561066257610662610441565b6106768161067084546105bf565b846105f9565b602080601f8311600181146106ab57600084156106935750858301515b600019600386901b1c1916600185901b17855561063f565b600085815260208120601f198616915b828110156106da578886015182559484019460019091019084016106bb565b50858210156106f85787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207c82e04d76a6006549841f941abc2679dd9e1bb0b1fc034d1101a20beeddbabe64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630fac55b7146100655780633ccfd60b14610087578063715018a61461009c5780638da5cb5b146100b1578063a85c38ef146100de578063f2fde38b1461014157600080fd5b3661006057005b600080fd5b34801561007157600080fd5b50610085610080366004610457565b610161565b005b34801561009357600080fd5b50610085610272565b3480156100a857600080fd5b50610085610356565b3480156100bd57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b506101316100f9366004610522565b6003602052600090815260409020805460018201546002909201546001600160a01b039182169291811690600160a01b900460ff1684565b6040516100d59493929190610551565b34801561014d57600080fd5b5061008561015c36600461059d565b61036a565b805133901580159061017557506005825110155b1561019e576001600160a01b038116600090815260026020526040902061019c8382610648565b505b6040518060800160405280826001600160a01b03168152602001858152602001846001600160a01b03168152602001600060028111156101e0576101e061053b565b905260018054600090815260036020908152604091829020845181546001600160a01b03199081166001600160a01b039283161783559286015194820194909455918401516002808401805493841692909516918217855560608601519394926001600160a81b03191690911790600160a01b9084908111156102655761026561053b565b0217905550505050505050565b61027a6103a8565b47806102b85760405162461bcd60e51b81526020600482015260086024820152674e6f2066756e647360c01b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114610305576040519150601f19603f3d011682016040523d82523d6000602084013e61030a565b606091505b50509050806103525760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016102af565b5050565b61035e6103a8565b61036860006103d5565b565b6103726103a8565b6001600160a01b03811661039c57604051631e4fbdf760e01b8152600060048201526024016102af565b6103a5816103d5565b50565b6000546001600160a01b031633146103685760405163118cdaa760e01b81523360048201526024016102af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461043c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561046c57600080fd5b8335925061047c60208501610425565b9150604084013567ffffffffffffffff8082111561049957600080fd5b818601915086601f8301126104ad57600080fd5b8135818111156104bf576104bf610441565b604051601f8201601f19908116603f011681019083821181831017156104e7576104e7610441565b8160405282815289602084870101111561050057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561053457600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385811682526020820185905283166040820152608081016003831061058e57634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b6000602082840312156105af57600080fd5b6105b882610425565b9392505050565b600181811c908216806105d357607f821691505b6020821081036105f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561064357600081815260208120601f850160051c810160208610156106205750805b601f850160051c820191505b8181101561063f5782815560010161062c565b5050505b505050565b815167ffffffffffffffff81111561066257610662610441565b6106768161067084546105bf565b846105f9565b602080601f8311600181146106ab57600084156106935750858301515b600019600386901b1c1916600185901b17855561063f565b600085815260208120601f198616915b828110156106da578886015182559484019460019091019084016106bb565b50858210156106f85787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207c82e04d76a6006549841f941abc2679dd9e1bb0b1fc034d1101a20beeddbabe64736f6c63430008140033",
  "devdoc": {
    "author": "NightmareFox12",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/PayFusion.sol:PayFusion",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/PayFusion.sol:PayFusion",
        "label": "orderID",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/PayFusion.sol:PayFusion",
        "label": "emails",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 204,
        "contract": "contracts/PayFusion.sol:PayFusion",
        "label": "orders",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Order)193_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(Status)320": {
        "encoding": "inplace",
        "label": "enum PayFusion.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Order)193_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PayFusion.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)193_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Order)193_storage": {
        "encoding": "inplace",
        "label": "struct PayFusion.Order",
        "members": [
          {
            "astId": 185,
            "contract": "contracts/PayFusion.sol:PayFusion",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 187,
            "contract": "contracts/PayFusion.sol:PayFusion",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 189,
            "contract": "contracts/PayFusion.sol:PayFusion",
            "label": "token",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 192,
            "contract": "contracts/PayFusion.sol:PayFusion",
            "label": "status",
            "offset": 20,
            "slot": "2",
            "type": "t_enum(Status)320"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}