{
  "address": "0x60b61B71019E6F4C58f9fa13F92f19527Ae64E6c",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "swapAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timelockEnd",
          "type": "uint256"
        }
      ],
      "name": "SwapCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allSwaps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashlock",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "timelockSeconds",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "createSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSwaps",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getSwapAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xce143f12c5d3777f9ecbaa18105551da647430677687676cc3e4e6ce88d0f83d",
  "receipt": {
    "to": null,
    "from": "0xD2692F9df925D18D527ABe8b3d99EE9E9C8d75AE",
    "contractAddress": "0x60b61B71019E6F4C58f9fa13F92f19527Ae64E6c",
    "transactionIndex": 0,
    "gasUsed": "22560472",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x4de775323af6f8a2638abfe20c03dae84a959fdf27aa120015da4c3c325a7fe3",
    "transactionHash": "0xce143f12c5d3777f9ecbaa18105551da647430677687676cc3e4e6ce88d0f83d",
    "logs": [],
    "blockNumber": 20802918,
    "cumulativeGasUsed": "22560472",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7fbc8a735f41be26d211a0d8e3e2964c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelockEnd\",\"type\":\"uint256\"}],\"name\":\"SwapCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSwaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelockSeconds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSwaps\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSwapAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSwap(bytes32,uint256,address,address,address,uint256)\":{\"params\":{\"amount\":\"Cantidad de tokens a intercambiar.\",\"executor\":\"Direcci\\u00f3n autorizada para ejecutar el swap (ej: un solver de 1inch Fusion+).\",\"hashlock\":\"El hash keccak256 del secreto compartido.\",\"receiver\":\"Direcci\\u00f3n que recibir\\u00e1 los tokens si presenta el secreto.\",\"timelockSeconds\":\"Duraci\\u00f3n del timelock en segundos.\",\"tokenAddress\":\"Direcci\\u00f3n del contrato del token ERC-20 a intercambiar.\"}},\"getSwapAddress(uint256)\":{\"params\":{\"index\":\"El \\u00edndice del contrato de swap en la lista.\"}}},\"title\":\"SwapFactory para desplegar y gestionar instancias de AtomicSwapIntentERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSwap(bytes32,uint256,address,address,address,uint256)\":{\"notice\":\"Crea una nueva instancia del contrato AtomicSwapIntentERC20.         El usuario (msg.sender) debe haber APROBADO previamente         que esta Factory pueda gastar sus 'amount' de 'tokenAddress'.\"},\"getAllSwaps()\":{\"notice\":\"Devuelve un array con todas las direcciones de los contratos de swap creados.\"},\"getSwapAddress(uint256)\":{\"notice\":\"Devuelve la direcci\\u00f3n de un contrato de swap dado su \\u00edndice.\"},\"getSwapCount()\":{\"notice\":\"Devuelve el n\\u00famero total de contratos de swap creados.\"}},\"notice\":\"Permite la creaci\\u00f3n estandarizada de nuevos swaps at\\u00f3micos ERC-20         y centraliza el dep\\u00f3sito inicial de tokens del usuario.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapFactory.sol\":\"SwapFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/AtomicSwapIntentERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\"; // Importa la interfaz est\\u00e1ndar ERC-20\\r\\n\\r\\n/// @title Atomic Swap with Hashlock/Timelock for ERC-20 Tokens\\r\\n/// @notice Este contrato facilita un swap at\\u00f3mico de tokens ERC-20 con hashlock y timelock.\\r\\n///         Est\\u00e1 dise\\u00f1ado para operar en UNA SOLA CADENA. Los tokens deben ser\\r\\n///         enviados a este contrato externamente (ej. por un Factory).\\r\\ncontract AtomicSwapIntentERC20 {\\r\\n    // Declaraci\\u00f3n de variables de estado\\r\\n    address public sender;          // La direcci\\u00f3n que inicia el swap y \\\"posee\\\" los tokens inicialmente\\r\\n    address public receiver;        // La direcci\\u00f3n que puede reclamar los tokens con el secreto\\r\\n    address public executor;        // Direcci\\u00f3n autorizada para ejecutar el swap (ej: un solver de 1inch Fusion+)\\r\\n    bytes32 public hashlock;        // El hash del secreto (keccak256(secreto))\\r\\n    uint256 public timelock;        // El timestamp Unix despu\\u00e9s del cual el remitente puede reclamar\\r\\n    uint256 public amount;          // La cantidad de tokens ERC-20 bloqueados\\r\\n    bool public withdrawn;          // Indica si el receptor ya retir\\u00f3 los tokens\\r\\n    bool public refunded;           // Indica si el remitente ya reclam\\u00f3 un reembolso\\r\\n    IERC20 public token;            // La interfaz del contrato del token ERC-20 que se est\\u00e1 utilizando\\r\\n\\r\\n    // Eventos para rastrear el ciclo de vida del swap\\r\\n    event SwapIntentCreated(\\r\\n        address indexed sender,\\r\\n        address indexed receiver,\\r\\n        address indexed tokenAddress,\\r\\n        bytes32 hashlock,\\r\\n        uint256 timelock,\\r\\n        uint256 amount,\\r\\n        address executor\\r\\n    );\\r\\n    event SwapExecuted(bytes32 secret);\\r\\n    event SwapRefunded();\\r\\n\\r\\n    /// @notice Constructor para crear una nueva instancia de swap at\\u00f3mico de tokens ERC-20.\\r\\n    ///         Este constructor es llamado por la Factory, que a su vez recibi\\u00f3 los tokens del usuario.\\r\\n    /// @param _sender La direcci\\u00f3n del usuario original que inici\\u00f3 el swap.\\r\\n    /// @param _hashlock El hash del secreto pre-imagen.\\r\\n    /// @param _timelockSeconds El n\\u00famero de segundos desde la creaci\\u00f3n despu\\u00e9s del cual el remitente puede reembolsar.\\r\\n    /// @param _receiver La direcci\\u00f3n que puede ejecutar el swap con el secreto.\\r\\n    /// @param _executor La direcci\\u00f3n que tiene permiso para ejecutar el swap, adem\\u00e1s del receptor.\\r\\n    /// @param _tokenAddress La direcci\\u00f3n del contrato del token ERC-20 a intercambiar.\\r\\n    /// @param _amount La cantidad de tokens ERC-20 a bloquear.\\r\\n    constructor(\\r\\n        address _sender,            // Nuevo: para almacenar la direcci\\u00f3n original del usuario\\r\\n        bytes32 _hashlock,\\r\\n        uint256 _timelockSeconds,\\r\\n        address _receiver,\\r\\n        address _executor,\\r\\n        address _tokenAddress,\\r\\n        uint256 _amount\\r\\n    ) {\\r\\n        // Validaciones iniciales\\r\\n        require(_amount > 0, \\\"Amount must be greater than zero.\\\");\\r\\n        require(_sender != address(0), \\\"Sender address cannot be zero.\\\"); // Validamos el sender original\\r\\n        require(_receiver != address(0), \\\"Receiver address cannot be zero.\\\");\\r\\n        require(_executor != address(0), \\\"Executor address cannot be zero.\\\");\\r\\n        require(_tokenAddress != address(0), \\\"Token address cannot be zero.\\\");\\r\\n        require(_timelockSeconds > 0, \\\"Timelock must be positive.\\\");\\r\\n\\r\\n        // Asignaci\\u00f3n de variables de estado\\r\\n        sender = _sender; // Almacenamos el sender original del usuario\\r\\n        receiver = _receiver;\\r\\n        executor = _executor;\\r\\n        hashlock = _hashlock;\\r\\n        timelock = block.timestamp + _timelockSeconds;\\r\\n        amount = _amount;\\r\\n        token = IERC20(_tokenAddress); // Inicializa la interfaz del token\\r\\n\\r\\n        // NOTA: La transferencia de tokens del usuario a este contrato es manejada\\r\\n        //       por el contrato Factory que despliega esta instancia.\\r\\n        //       No hay un 'transferFrom' aqu\\u00ed.\\r\\n\\r\\n        // Emitir evento para registrar la creaci\\u00f3n del swap\\r\\n        emit SwapIntentCreated(sender, receiver, _tokenAddress, hashlock, timelock, amount, executor);\\r\\n    }\\r\\n\\r\\n    /// @notice Permite al receptor o al ejecutor ejecutar el swap y reclamar los tokens.\\r\\n    /// @param _secret El secreto pre-imagen que se hashe\\u00f3 para obtener el hashlock.\\r\\n    function executeSwap(bytes32 _secret) external {\\r\\n        // Validaciones para la ejecuci\\u00f3n\\r\\n        require(!withdrawn, \\\"Already withdrawn.\\\");\\r\\n        require(!refunded, \\\"Already refunded.\\\");\\r\\n        require(\\r\\n            msg.sender == receiver || msg.sender == executor,\\r\\n            \\\"Unauthorized executor or receiver.\\\"\\r\\n        );\\r\\n        require(keccak256(abi.encodePacked(_secret)) == hashlock, \\\"Invalid secret.\\\");\\r\\n\\r\\n        // Marcar como retirado y transferir los tokens al receptor\\r\\n        withdrawn = true;\\r\\n        // El token.balanceOf(address(this)) debe ser al menos 'amount' aqu\\u00ed.\\r\\n        // Esto es garantizado por la factory que lo transfiri\\u00f3 previamente.\\r\\n        require(token.transfer(receiver, amount), \\\"Token transfer failed during execution.\\\");\\r\\n        emit SwapExecuted(_secret);\\r\\n    }\\r\\n\\r\\n    /// @notice Permite al remitente original reembolsar sus tokens si el timelock ha expirado\\r\\n    ///         y el swap no fue ejecutado.\\r\\n    function refundSwap() external {\\r\\n        // Validaciones para el reembolso\\r\\n        require(block.timestamp > timelock, \\\"Timelock not expired.\\\");\\r\\n        require(msg.sender == sender, \\\"Only sender can refund.\\\"); // msg.sender es el sender original\\r\\n        require(!withdrawn, \\\"Already withdrawn.\\\");\\r\\n        require(!refunded, \\\"Already refunded.\\\");\\r\\n\\r\\n        // Marcar como reembolsado y transferir los tokens de vuelta al remitente\\r\\n        refunded = true;\\r\\n        require(token.transfer(sender, amount), \\\"Token refund failed.\\\");\\r\\n        emit SwapRefunded();\\r\\n    }\\r\\n\\r\\n    /// @notice Devuelve el tiempo restante hasta que el timelock expire.\\r\\n    /// @return El tiempo restante en segundos.\\r\\n    function getRemainingTime() external view returns (uint256) {\\r\\n        return block.timestamp >= timelock ? 0 : timelock - block.timestamp;\\r\\n    }\\r\\n\\r\\n    /// @notice Devuelve el estado actual del swap.\\r\\n    /// @return Una cadena de texto que describe el estado (\\\"Completed\\\", \\\"Refunded\\\", \\\"Pending\\\").\\r\\n    function getSwapStatus() external view returns (string memory) {\\r\\n        if (withdrawn) return \\\"Completed\\\";\\r\\n        if (refunded) return \\\"Refunded\\\";\\r\\n        return \\\"Pending\\\";\\r\\n    }\\r\\n}\",\"keccak256\":\"0x0076d0a539f824efe5ff3a8e3f5b99b26aab55269dbcdd558482110a7f9e1e17\",\"license\":\"MIT\"},\"contracts/SwapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\"; // Necesario para interactuar con el token\\r\\nimport \\\"./AtomicSwapIntentERC20.sol\\\"; // Importa el contrato de swap at\\u00f3mico\\r\\n\\r\\n/// @title SwapFactory para desplegar y gestionar instancias de AtomicSwapIntentERC20\\r\\n/// @notice Permite la creaci\\u00f3n estandarizada de nuevos swaps at\\u00f3micos ERC-20\\r\\n///         y centraliza el dep\\u00f3sito inicial de tokens del usuario.\\r\\ncontract SwapFactory {\\r\\n    address[] public allSwaps; // Almacena las direcciones de todos los contratos de swap creados\\r\\n\\r\\n    // Evento que se emite cuando se crea un nuevo contrato de swap\\r\\n    event SwapCreated(\\r\\n        address swapAddress,      // Direcci\\u00f3n del nuevo contrato de swap\\r\\n        address indexed creator,  // El usuario que inici\\u00f3 la creaci\\u00f3n del swap (msg.sender de la factory)\\r\\n        address indexed receiver, // El receptor final de los tokens\\r\\n        address indexed token,    // La direcci\\u00f3n del token ERC-20\\r\\n        uint256 amount,           // La cantidad de tokens\\r\\n        uint256 timelockEnd       // El timestamp Unix de finalizaci\\u00f3n del timelock\\r\\n    );\\r\\n\\r\\n    /// @notice Crea una nueva instancia del contrato AtomicSwapIntentERC20.\\r\\n    ///         El usuario (msg.sender) debe haber APROBADO previamente\\r\\n    ///         que esta Factory pueda gastar sus 'amount' de 'tokenAddress'.\\r\\n    /// @param hashlock El hash keccak256 del secreto compartido.\\r\\n    /// @param timelockSeconds Duraci\\u00f3n del timelock en segundos.\\r\\n    /// @param receiver Direcci\\u00f3n que recibir\\u00e1 los tokens si presenta el secreto.\\r\\n    /// @param executor Direcci\\u00f3n autorizada para ejecutar el swap (ej: un solver de 1inch Fusion+).\\r\\n    /// @param tokenAddress Direcci\\u00f3n del contrato del token ERC-20 a intercambiar.\\r\\n    /// @param amount Cantidad de tokens a intercambiar.\\r\\n    function createSwap(\\r\\n        bytes32 hashlock,\\r\\n        uint256 timelockSeconds,\\r\\n        address receiver,\\r\\n        address executor,\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external {\\r\\n        // Validaciones iniciales\\r\\n        require(amount > 0, \\\"Amount must be greater than zero.\\\");\\r\\n        require(receiver != address(0), \\\"Receiver address required.\\\");\\r\\n        require(executor != address(0), \\\"Executor address required.\\\");\\r\\n        require(tokenAddress != address(0), \\\"Token address required.\\\");\\r\\n        require(timelockSeconds > 0, \\\"Timelock must be positive.\\\");\\r\\n\\r\\n        // Referencia al contrato del token ERC-20\\r\\n        IERC20 tokenInstance = IERC20(tokenAddress);\\r\\n\\r\\n        // Paso 1: Mover los tokens del USUARIO (msg.sender) a la Factory.\\r\\n        // El usuario debe haber llamado a token.approve(address(this), amount) ANTES de llamar a esta funci\\u00f3n.\\r\\n        require(\\r\\n            tokenInstance.transferFrom(msg.sender, address(this), amount),\\r\\n            \\\"Token transfer from user to factory failed. Check allowance.\\\"\\r\\n        );\\r\\n\\r\\n        // Paso 2: Crear la nueva instancia del contrato AtomicSwapIntentERC20.\\r\\n        // Pasamos msg.sender como el '_sender' original para el AtomicSwapIntentERC20\\r\\n        // para que ese contrato sepa qui\\u00e9n tiene los derechos de reembolso.\\r\\n        AtomicSwapIntentERC20 newSwap = new AtomicSwapIntentERC20(\\r\\n            msg.sender,         // El usuario original que crea el intent\\r\\n            hashlock,\\r\\n            timelockSeconds,\\r\\n            receiver,\\r\\n            executor,\\r\\n            tokenAddress,\\r\\n            amount\\r\\n        );\\r\\n\\r\\n        // Paso 3: Mover los tokens de la Factory al nuevo contrato de swap.\\r\\n        // Ahora los tokens est\\u00e1n en la Factory, y se transfieren al contrato de swap reci\\u00e9n creado.\\r\\n        require(\\r\\n            tokenInstance.transfer(address(newSwap), amount),\\r\\n            \\\"Token transfer from factory to new swap contract failed.\\\"\\r\\n        );\\r\\n\\r\\n        // Almacenar la direcci\\u00f3n del nuevo contrato de swap\\r\\n        allSwaps.push(address(newSwap));\\r\\n\\r\\n        // Emitir evento para registrar la creaci\\u00f3n del swap\\r\\n        emit SwapCreated(\\r\\n            address(newSwap),\\r\\n            msg.sender,\\r\\n            receiver,\\r\\n            tokenAddress,\\r\\n            amount,\\r\\n            block.timestamp + timelockSeconds\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @notice Devuelve el n\\u00famero total de contratos de swap creados.\\r\\n    function getSwapCount() external view returns (uint256) {\\r\\n        return allSwaps.length;\\r\\n    }\\r\\n\\r\\n    /// @notice Devuelve la direcci\\u00f3n de un contrato de swap dado su \\u00edndice.\\r\\n    /// @param index El \\u00edndice del contrato de swap en la lista.\\r\\n    function getSwapAddress(uint256 index) external view returns (address) {\\r\\n        require(index < allSwaps.length, \\\"Invalid index.\\\");\\r\\n        return allSwaps[index];\\r\\n    }\\r\\n\\r\\n    /// @notice Devuelve un array con todas las direcciones de los contratos de swap creados.\\r\\n    function getAllSwaps() external view returns (address[] memory) {\\r\\n        return allSwaps;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x478e5ce2ff2c91a758f04dca20394a02c8a83f1f3d7530c7414633bace927ad6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5061142f8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633b3c02501461005c5780639ac9b2341461008c578063ba94132a1461009f578063d6cfeae0146100b4578063d81671bc146100c9575b600080fd5b61006f61006a36600461068d565b6100da565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f61009a36600461068d565b610150565b6100b26100ad3660046106c2565b61017a565b005b6100bc61061e565b6040516100839190610723565b600054604051908152602001610083565b6000805482106101225760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b60448201526064015b60405180910390fd5b600082815481106101355761013561076f565b6000918252602090912001546001600160a01b031692915050565b6000818154811061016057600080fd5b6000918252602090912001546001600160a01b0316905081565b600081116101d45760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b6064820152608401610119565b6001600160a01b03841661022a5760405162461bcd60e51b815260206004820152601a60248201527f526563656976657220616464726573732072657175697265642e0000000000006044820152606401610119565b6001600160a01b0383166102805760405162461bcd60e51b815260206004820152601a60248201527f4578656375746f7220616464726573732072657175697265642e0000000000006044820152606401610119565b6001600160a01b0382166102d65760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616464726573732072657175697265642e0000000000000000006044820152606401610119565b600085116103265760405162461bcd60e51b815260206004820152601a60248201527f54696d656c6f636b206d75737420626520706f7369746976652e0000000000006044820152606401610119565b6040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd906064016020604051808303816000875af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610785565b6104115760405162461bcd60e51b815260206004820152603c60248201527f546f6b656e207472616e736665722066726f6d207573657220746f206661637460448201527f6f7279206661696c65642e20436865636b20616c6c6f77616e63652e000000006064820152608401610119565b60003388888888888860405161042690610680565b6001600160a01b0397881681526020810196909652604086019490945291851660608501528416608084015290921660a082015260c081019190915260e001604051809103906000f080158015610481573d6000803e3d6000fd5b5060405163a9059cbb60e01b81526001600160a01b038083166004830152602482018690529192509083169063a9059cbb906044016020604051808303816000875af11580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f99190610785565b61056b5760405162461bcd60e51b815260206004820152603860248201527f546f6b656e207472616e736665722066726f6d20666163746f727920746f206e60448201527f6577207377617020636f6e7472616374206661696c65642e00000000000000006064820152608401610119565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383811691909117909155848116908716337f63ddfe275c04d4adf4185de83aad2f6b1eb299f299177fad015f6c039cb79b8d84876105ec8d426107ae565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a45050505050505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561067657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610658575b5050505050905090565b610c24806107d683390190565b60006020828403121561069f57600080fd5b5035919050565b80356001600160a01b03811681146106bd57600080fd5b919050565b60008060008060008060c087890312156106db57600080fd5b86359550602087013594506106f2604088016106a6565b9350610700606088016106a6565b925061070e608088016106a6565b9598949750929591949360a090920135925050565b602080825282518282018190526000918401906040840190835b818110156107645783516001600160a01b031683526020938401939092019160010161073d565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561079757600080fd5b815180151581146107a757600080fd5b9392505050565b808201808211156107cf57634e487b7160e01b600052601160045260246000fd5b9291505056fe608060405234801561001057600080fd5b50604051610c24380380610c2483398101604081905261002f9161033a565b6000811161008e5760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b60648201526084015b60405180910390fd5b6001600160a01b0387166100e45760405162461bcd60e51b815260206004820152601e60248201527f53656e64657220616464726573732063616e6e6f74206265207a65726f2e00006044820152606401610085565b6001600160a01b03841661013a5760405162461bcd60e51b815260206004820181905260248201527f526563656976657220616464726573732063616e6e6f74206265207a65726f2e6044820152606401610085565b6001600160a01b0383166101905760405162461bcd60e51b815260206004820181905260248201527f4578656375746f7220616464726573732063616e6e6f74206265207a65726f2e6044820152606401610085565b6001600160a01b0382166101e65760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f2e0000006044820152606401610085565b600085116102365760405162461bcd60e51b815260206004820152601a60248201527f54696d656c6f636b206d75737420626520706f7369746976652e0000000000006044820152606401610085565b600080546001600160a01b03808a166001600160a01b031992831617909255600180548784169083161790556002805492861692909116919091179055600386905561028285426103b2565b60048190556005829055600680546001600160a01b0385811662010000810262010000600160b01b03199093169290921790925560015460005460035460025460408051928352602083019790975281870188905285166060820152945192949184169316917fd9df0870fe66a2158c8509e61f2bc059197611a9858033e216ae6e21f51398d29181900360800190a4505050505050506103d9565b80516001600160a01b038116811461033557600080fd5b919050565b600080600080600080600060e0888a03121561035557600080fd5b61035e8861031e565b602089015160408a01519198509650945061037b6060890161031e565b93506103896080890161031e565b925061039760a0890161031e565b9150600060c089015190508091505092959891949750929550565b808201808211156103d357634e487b7160e01b600052601160045260246000fd5b92915050565b61083c806103e86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c34c08e51161008c578063d33219b411610066578063d33219b414610198578063efb98bcf146101a1578063f7260d3e146101a9578063fc0c546a146101bc57600080fd5b8063c34c08e514610170578063c72b61be14610183578063c80ec5221461018b57600080fd5b806312f53950146100d4578063153127ce146100fb57806367e404ce1461011057806392654efa1461013b578063a782086e14610150578063aa8c217c14610167575b600080fd5b6006546100e690610100900460ff1681565b60405190151581526020015b60405180910390f35b6101036101d5565b6040516100f2919061074f565b600054610123906001600160a01b031681565b6040516001600160a01b0390911681526020016100f2565b61014e61014936600461079d565b61025c565b005b61015960035481565b6040519081526020016100f2565b61015960055481565b600254610123906001600160a01b031681565b61014e6104f4565b6006546100e69060ff1681565b61015960045481565b61015961072a565b600154610123906001600160a01b031681565b600654610123906201000090046001600160a01b031681565b60065460609060ff1615610207575060408051808201909152600981526810dbdb5c1b195d195960ba1b602082015290565b600654610100900460ff161561023a57506040805180820190915260088152671499599d5b99195960c21b602082015290565b5060408051808201909152600781526650656e64696e6760c81b602082015290565b60065460ff16156102a95760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c903bb4ba34323930bbb71760711b60448201526064015b60405180910390fd5b600654610100900460ff16156102f55760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903932b33ab73232b21760791b60448201526064016102a0565b6001546001600160a01b031633148061031857506002546001600160a01b031633145b61036f5760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564206578656375746f72206f722072656365697665604482015261391760f11b60648201526084016102a0565b60035460408051602081018490520160405160208183030381529060405280519060200120146103d35760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21039b2b1b932ba1760891b60448201526064016102a0565b6006805460ff19166001908117918290555460055460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915262010000909204169063a9059cbb906044016020604051808303816000875af115801561043e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046291906107b6565b6104be5760405162461bcd60e51b815260206004820152602760248201527f546f6b656e207472616e73666572206661696c656420647572696e672065786560448201526631baba34b7b71760c91b60648201526084016102a0565b6040518181527f6921a2110a802468e8955f2885822155442ad19c60f42db0444a6993c23d20629060200160405180910390a150565b600454421161053d5760405162461bcd60e51b81526020600482015260156024820152742a34b6b2b637b1b5903737ba1032bc3834b932b21760591b60448201526064016102a0565b6000546001600160a01b031633146105975760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792073656e6465722063616e20726566756e642e00000000000000000060448201526064016102a0565b60065460ff16156105df5760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c903bb4ba34323930bbb71760711b60448201526064016102a0565b600654610100900460ff161561062b5760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903932b33ab73232b21760791b60448201526064016102a0565b6006805461ff001916610100179081905560005460055460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915262010000909204169063a9059cbb906044016020604051808303816000875af1158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc91906107b6565b6106ff5760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b7103932b33ab732103330b4b632b21760611b60448201526064016102a0565b6040517feca32268c495f4202277ddc0853891e19ad3250bd98fd2b2aaba02d05d13ede490600090a1565b6000600454421015610749574260045461074491906107df565b905090565b50600090565b602081526000825180602084015260005b8181101561077d5760208186018101516040868401015201610760565b506000604082850101526040601f19601f83011684010191505092915050565b6000602082840312156107af57600080fd5b5035919050565b6000602082840312156107c857600080fd5b815180151581146107d857600080fd5b9392505050565b8181038181111561080057634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220581937863460b3c48a27233fccaf0713e4a6a4b9a8c3ba99c846133c3a5e2a4c64736f6c634300081e0033a2646970667358221220d752c7089b3beb84029e40dc2a92bfa34969b37a5029d0b070dcddd842c9aad264736f6c634300081e0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createSwap(bytes32,uint256,address,address,address,uint256)": {
        "params": {
          "amount": "Cantidad de tokens a intercambiar.",
          "executor": "Dirección autorizada para ejecutar el swap (ej: un solver de 1inch Fusion+).",
          "hashlock": "El hash keccak256 del secreto compartido.",
          "receiver": "Dirección que recibirá los tokens si presenta el secreto.",
          "timelockSeconds": "Duración del timelock en segundos.",
          "tokenAddress": "Dirección del contrato del token ERC-20 a intercambiar."
        }
      },
      "getSwapAddress(uint256)": {
        "params": {
          "index": "El índice del contrato de swap en la lista."
        }
      }
    },
    "title": "SwapFactory para desplegar y gestionar instancias de AtomicSwapIntentERC20",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createSwap(bytes32,uint256,address,address,address,uint256)": {
        "notice": "Crea una nueva instancia del contrato AtomicSwapIntentERC20.         El usuario (msg.sender) debe haber APROBADO previamente         que esta Factory pueda gastar sus 'amount' de 'tokenAddress'."
      },
      "getAllSwaps()": {
        "notice": "Devuelve un array con todas las direcciones de los contratos de swap creados."
      },
      "getSwapAddress(uint256)": {
        "notice": "Devuelve la dirección de un contrato de swap dado su índice."
      },
      "getSwapCount()": {
        "notice": "Devuelve el número total de contratos de swap creados."
      }
    },
    "notice": "Permite la creación estandarizada de nuevos swaps atómicos ERC-20         y centraliza el depósito inicial de tokens del usuario.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 392,
        "contract": "contracts/SwapFactory.sol:SwapFactory",
        "label": "allSwaps",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}