{
  "address": "0x7E8f888a45F77FfdC33c6C69271763D7C246fF30",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "swapAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timelockEnd",
          "type": "uint256"
        }
      ],
      "name": "SwapCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allSwaps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashlock",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "timelockSeconds",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "createSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSwaps",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getSwapAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2c2d0422dbe20820034ab23475fdf49b48bf30a29048e5508eb9d5846055a143",
  "receipt": {
    "to": null,
    "from": "0xD2692F9df925D18D527ABe8b3d99EE9E9C8d75AE",
    "contractAddress": "0x7E8f888a45F77FfdC33c6C69271763D7C246fF30",
    "transactionIndex": 0,
    "gasUsed": "20773292",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x9f3efd1ef428e2a437fcc9ae77d4e60bab15af6af48b3f687171278e88c935f0",
    "transactionHash": "0x2c2d0422dbe20820034ab23475fdf49b48bf30a29048e5508eb9d5846055a143",
    "logs": [],
    "blockNumber": 20813031,
    "cumulativeGasUsed": "20773292",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "15bbd35710f481d236bc9ad8b64c06a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelockEnd\",\"type\":\"uint256\"}],\"name\":\"SwapCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSwaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelockSeconds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSwaps\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSwapAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSwap(bytes32,uint256,address,address,uint256)\":{\"params\":{\"amount\":\"Cantidad de tokens a intercambiar.\",\"hashlock\":\"El hash keccak256 del secreto compartido.\",\"receiver\":\"Direcci\\u00f3n que recibir\\u00e1 los tokens si presenta el secreto.\",\"timelockSeconds\":\"Duraci\\u00f3n del timelock en segundos.\",\"tokenAddress\":\"Direcci\\u00f3n del contrato del token ERC-20 a intercambiar.\"}}},\"title\":\"SwapFactory para desplegar y gestionar instancias de FusionSwapIntentERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSwap(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Crea una nueva instancia del contrato FusionSwapIntentERC20.         El usuario (msg.sender) debe haber APROBADO previamente         que esta Factory pueda gastar sus 'amount' de 'tokenAddress'.\"}},\"notice\":\"Permite la creaci\\u00f3n estandarizada de nuevos swaps at\\u00f3micos ERC-20         y centraliza el dep\\u00f3sito inicial de tokens del usuario.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapFactory.sol\":\"SwapFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/FusionSwapIntentERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.30;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\n/// @title Cross-Chain Atomic Swap Intent ERC20 (Fusion+ Compatible)\\r\\n/// @notice Contrato para swaps at\\u00f3micos con hashlock y timelock que\\r\\n///         puede usarse en flujos cross-chain con relayers como Fusion+.\\r\\ncontract FusionSwapIntentERC20 {\\r\\n    address public sender; // Quien crea el swap (y puede pedir reembolso)\\r\\n    address public receiver; // Quien recibe los fondos si revela el secreto\\r\\n    bytes32 public hashlock; // keccak256(secreto)\\r\\n    uint256 public timelock; // Expiraci\\u00f3n Unix timestamp\\r\\n    uint256 public amount; // Tokens bloqueados\\r\\n    IERC20 public token; // Token ERC-20\\r\\n    bool public withdrawn; // Swap ejecutado con \\u00e9xito\\r\\n    bool public refunded; // Reembolso ejecutado\\r\\n\\r\\n    event SwapIntentCreated(\\r\\n        address indexed sender,\\r\\n        address indexed receiver,\\r\\n        address indexed token,\\r\\n        bytes32 hashlock,\\r\\n        uint256 timelock,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    event SecretRevealed(bytes32 secret);\\r\\n    event SwapExecuted(address executor, bytes32 secret);\\r\\n    event SwapRefunded();\\r\\n\\r\\n    constructor(\\r\\n        address _sender,\\r\\n        bytes32 _hashlock,\\r\\n        uint256 _timelockSeconds,\\r\\n        address _receiver,\\r\\n        address _token,\\r\\n        uint256 _amount\\r\\n    ) {\\r\\n        require(_sender != address(0), \\\"Invalid sender\\\");\\r\\n        require(_receiver != address(0), \\\"Invalid receiver\\\");\\r\\n        require(_token != address(0), \\\"Invalid token\\\");\\r\\n        require(_amount > 0, \\\"Amount must be > 0\\\");\\r\\n        require(_timelockSeconds > 0, \\\"Timelock must be positive\\\");\\r\\n\\r\\n        sender = _sender;\\r\\n        receiver = _receiver;\\r\\n        hashlock = _hashlock;\\r\\n        timelock = block.timestamp + _timelockSeconds;\\r\\n        token = IERC20(_token);\\r\\n        amount = _amount;\\r\\n\\r\\n        emit SwapIntentCreated(_sender, _receiver, _token, _hashlock, timelock, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Publica el secreto para que solvers lo usen en otra cadena\\r\\n    ///         (ej. para completar el swap en Optimism si se revel\\u00f3 en Etherlink)\\r\\n    function revealSecret(bytes32 _secret) external {\\r\\n        require(keccak256(abi.encodePacked(_secret)) == hashlock, \\\"Invalid secret\\\");\\r\\n        emit SecretRevealed(_secret);\\r\\n    }\\r\\n\\r\\n    /// @notice Ejecuta el swap si se conoce el secreto.\\r\\n    /// @dev Abierto para cualquier executor que tenga el preimagen v\\u00e1lida.\\r\\n    function executeSwap(bytes32 _secret) external {\\r\\n        require(!withdrawn, \\\"Already executed\\\");\\r\\n        require(!refunded, \\\"Already refunded\\\");\\r\\n        require(keccak256(abi.encodePacked(_secret)) == hashlock, \\\"Invalid secret\\\");\\r\\n\\r\\n        withdrawn = true;\\r\\n        require(token.transfer(receiver, amount), \\\"Token transfer failed\\\");\\r\\n        emit SwapExecuted(msg.sender, _secret);\\r\\n    }\\r\\n\\r\\n    /// @notice Permite al sender reembolsar si nadie revel\\u00f3 el secreto antes del timelock.\\r\\n    function refundSwap() external {\\r\\n        require(block.timestamp > timelock, \\\"Timelock not expired\\\");\\r\\n        require(msg.sender == sender, \\\"Only sender can refund\\\");\\r\\n        require(!withdrawn, \\\"Already executed\\\");\\r\\n        require(!refunded, \\\"Already refunded\\\");\\r\\n\\r\\n        refunded = true;\\r\\n        require(token.transfer(sender, amount), \\\"Refund failed\\\");\\r\\n        emit SwapRefunded();\\r\\n    }\\r\\n\\r\\n    /// @return Estado actual como texto\\r\\n    function getSwapStatus() external view returns (string memory) {\\r\\n        if (withdrawn) return \\\"Completed\\\";\\r\\n        if (refunded) return \\\"Refunded\\\";\\r\\n        return \\\"Pending\\\";\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0xaa76cc1c4abdf69d54cc1471b1eb9d3844dc46f8b5a92a9a310d69ca36360e11\",\"license\":\"MIT\"},\"contracts/SwapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./FusionSwapIntentERC20.sol\\\";\\r\\n\\r\\n/// @title SwapFactory para desplegar y gestionar instancias de FusionSwapIntentERC20\\r\\n/// @notice Permite la creaci\\u00f3n estandarizada de nuevos swaps at\\u00f3micos ERC-20\\r\\n///         y centraliza el dep\\u00f3sito inicial de tokens del usuario.\\r\\ncontract SwapFactory {\\r\\n    //states\\r\\n    address[] public allSwaps;\\r\\n\\r\\n    //events\\r\\n    event SwapCreated(\\r\\n        address swapAddress,     \\r\\n        address indexed creator, \\r\\n        address indexed receiver, \\r\\n        address indexed token,    // La direcci\\u00f3n del token ERC-20\\r\\n        uint256 amount,     \\r\\n        uint256 timelockEnd       // El timestamp Unix de finalizaci\\u00f3n del timelock\\r\\n    );\\r\\n\\r\\n    /// @notice Crea una nueva instancia del contrato FusionSwapIntentERC20.\\r\\n    ///         El usuario (msg.sender) debe haber APROBADO previamente\\r\\n    ///         que esta Factory pueda gastar sus 'amount' de 'tokenAddress'.\\r\\n    /// @param hashlock El hash keccak256 del secreto compartido.\\r\\n    /// @param timelockSeconds Duraci\\u00f3n del timelock en segundos.\\r\\n    /// @param receiver Direcci\\u00f3n que recibir\\u00e1 los tokens si presenta el secreto.\\r\\n    /// @param tokenAddress Direcci\\u00f3n del contrato del token ERC-20 a intercambiar.\\r\\n    /// @param amount Cantidad de tokens a intercambiar.\\r\\n    function createSwap(\\r\\n        bytes32 hashlock,\\r\\n        uint256 timelockSeconds,\\r\\n        address receiver,\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external {\\r\\n        // Validaciones iniciales\\r\\n        require(amount > 0, \\\"Amount must be greater than zero.\\\");\\r\\n        require(receiver != address(0), \\\"Receiver address required.\\\");\\r\\n        require(tokenAddress != address(0), \\\"Token address required.\\\");\\r\\n        require(timelockSeconds > 0, \\\"Timelock must be positive.\\\");\\r\\n\\r\\n        IERC20 tokenInstance = IERC20(tokenAddress);\\r\\n\\r\\n        // Paso 1: Mover los tokens del USUARIO (msg.sender) a la Factory.\\r\\n        // El usuario debe haber llamado a token.approve(address(this), amount) ANTES de llamar a esta funci\\u00f3n.\\r\\n        require(\\r\\n            tokenInstance.transferFrom(msg.sender, address(this), amount),\\r\\n            \\\"Token transfer from user to factory failed. Check allowance.\\\"\\r\\n        );\\r\\n\\r\\n        // Paso 2: Crear la nueva instancia del contrato FusionSwapIntentERC20.\\r\\n        // Pasamos msg.sender como el '_sender' original para el FusionSwapIntentERC20\\r\\n        // para que ese contrato sepa qui\\u00e9n tiene los derechos de reembolso.\\r\\n        FusionSwapIntentERC20 newSwap = new FusionSwapIntentERC20(\\r\\n            msg.sender,         \\r\\n            hashlock,\\r\\n            timelockSeconds,\\r\\n            receiver,\\r\\n            tokenAddress,\\r\\n            amount\\r\\n        );\\r\\n\\r\\n        // Paso 3: Mover los tokens de la Factory al nuevo contrato de swap.\\r\\n        // Ahora los tokens est\\u00e1n en la Factory, y se transfieren al contrato de swap reci\\u00e9n creado.\\r\\n        require(\\r\\n            tokenInstance.transfer(address(newSwap), amount),\\r\\n            \\\"Token transfer from factory to new swap contract failed.\\\"\\r\\n        );\\r\\n\\r\\n        // Almacenar la direcci\\u00f3n del nuevo contrato de swap\\r\\n        allSwaps.push(address(newSwap));\\r\\n\\r\\n        emit SwapCreated(\\r\\n            address(newSwap),\\r\\n            msg.sender,\\r\\n            receiver,\\r\\n            tokenAddress,\\r\\n            amount,\\r\\n            block.timestamp + timelockSeconds\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getSwapCount() external view returns (uint256) {\\r\\n        return allSwaps.length;\\r\\n    }\\r\\n\\r\\n    function getSwapAddress(uint256 index) external view returns (address) {\\r\\n        require(index < allSwaps.length, \\\"Invalid index.\\\");\\r\\n        return allSwaps[index];\\r\\n    }\\r\\n\\r\\n    function getAllSwaps() external view returns (address[] memory) {\\r\\n        return allSwaps;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x87d36245d00974b19588e6175aeedaa050022d6f92b47c32c99f3df8ec5f7abf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506112878061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633b3c02501461005c5780639ac9b2341461008c578063d6cfeae01461009f578063d81671bc146100b4578063da8b673f146100c5575b600080fd5b61006f61006a36600461062e565b6100da565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f61009a36600461062e565b610150565b6100a761017a565b6040516100839190610647565b600054604051908152602001610083565b6100d86100d33660046106af565b6101dc565b005b6000805482106101225760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b60448201526064015b60405180910390fd5b60008281548110610135576101356106fd565b6000918252602090912001546001600160a01b031692915050565b6000818154811061016057600080fd5b6000918252602090912001546001600160a01b0316905081565b606060008054806020026020016040519081016040528092919081815260200182805480156101d257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101b4575b5050505050905090565b600081116102365760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b6064820152608401610119565b6001600160a01b03831661028c5760405162461bcd60e51b815260206004820152601a60248201527f526563656976657220616464726573732072657175697265642e0000000000006044820152606401610119565b6001600160a01b0382166102e25760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616464726573732072657175697265642e0000000000000000006044820152606401610119565b600084116103325760405162461bcd60e51b815260206004820152601a60248201527f54696d656c6f636b206d75737420626520706f7369746976652e0000000000006044820152606401610119565b6040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190610713565b61041d5760405162461bcd60e51b815260206004820152603c60248201527f546f6b656e207472616e736665722066726f6d207573657220746f206661637460448201527f6f7279206661696c65642e20436865636b20616c6c6f77616e63652e000000006064820152608401610119565b600033878787878760405161043190610621565b6001600160a01b039687168152602081019590955260408501939093529084166060840152909216608082015260a081019190915260c001604051809103906000f080158015610485573d6000803e3d6000fd5b5060405163a9059cbb60e01b81526001600160a01b038083166004830152602482018690529192509083169063a9059cbb906044016020604051808303816000875af11580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610713565b61056f5760405162461bcd60e51b815260206004820152603860248201527f546f6b656e207472616e736665722066726f6d20666163746f727920746f206e60448201527f6577207377617020636f6e7472616374206661696c65642e00000000000000006064820152608401610119565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383811691909117909155848116908616337f63ddfe275c04d4adf4185de83aad2f6b1eb299f299177fad015f6c039cb79b8d84876105f08c4261073c565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a450505050505050565b610aee8061076483390190565b60006020828403121561064057600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b818110156106885783516001600160a01b0316835260209384019390920191600101610661565b509095945050505050565b80356001600160a01b03811681146106aa57600080fd5b919050565b600080600080600060a086880312156106c757600080fd5b85359450602086013593506106de60408701610693565b92506106ec60608701610693565b949793965091946080013592915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561072557600080fd5b8151801515811461073557600080fd5b9392505050565b8082018082111561075d57634e487b7160e01b600052601160045260246000fd5b9291505056fe608060405234801561001057600080fd5b50604051610aee380380610aee83398101604081905261002f91610277565b6001600160a01b03861661007b5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b2b73232b960911b60448201526064015b60405180910390fd5b6001600160a01b0383166100c45760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b1b2b4bb32b960811b6044820152606401610072565b6001600160a01b03821661010a5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610072565b6000811161014f5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610072565b6000841161019f5760405162461bcd60e51b815260206004820152601960248201527f54696d656c6f636b206d75737420626520706f736974697665000000000000006044820152606401610072565b600080546001600160a01b038089166001600160a01b031992831617909255600180549286169290911691909117905560028590556101de84426102dd565b6003819055600580546001600160a01b0319166001600160a01b038581169182179092556004849055604080518981526020810194909452830184905291858216918916907f2fdb6f62c0073da0eca287e922e0d8a00b5fc3ccf52e955d67cdc42bb83e23299060600160405180910390a4505050505050610304565b80516001600160a01b038116811461027257600080fd5b919050565b60008060008060008060c0878903121561029057600080fd5b6102998761025b565b60208801516040890151919750955093506102b66060880161025b565b92506102c46080880161025b565b9150600060a08801519050809150509295509295509295565b808201808211156102fe57634e487b7160e01b600052601160045260246000fd5b92915050565b6107db806103136000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063aa8c217c11610071578063aa8c217c14610161578063c72b61be1461016a578063c80ec52214610172578063d33219b414610186578063f7260d3e1461018f578063fc0c546a146101a257600080fd5b806312f53950146100b9578063153127ce146100e257806360307545146100f757806367e404ce1461010c57806392654efa14610137578063a782086e1461014a575b600080fd5b6005546100cd90600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6100ea6101b5565b6040516100d99190610715565b61010a610105366004610763565b610245565b005b60005461011f906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b61010a610145366004610763565b6102e4565b61015360025481565b6040519081526020016100d9565b61015360045481565b61010a6104ea565b6005546100cd90600160a01b900460ff1681565b61015360035481565b60015461011f906001600160a01b031681565b60055461011f906001600160a01b031681565b600554606090600160a01b900460ff16156101ee575060408051808201909152600981526810dbdb5c1b195d195960ba1b602082015290565b600554600160a81b900460ff161561022357506040805180820190915260088152671499599d5b99195960c21b602082015290565b5060408051808201909152600781526650656e64696e6760c81b602082015290565b60025460408051602081018490520160405160208183030381529060405280519060200120146102ad5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081cd958dc995d60921b60448201526064015b60405180910390fd5b6040518181527f9b7ddc883342824bd7ddbff103e7a69f8f2e60b96c075cd1b8b8b9713ecc75a4906020015b60405180910390a150565b600554600160a01b900460ff16156103315760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b60448201526064016102a4565b600554600160a81b900460ff161561037e5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c99599d5b99195960821b60448201526064016102a4565b60025460408051602081018490520160405160208183030381529060405280519060200120146103e15760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081cd958dc995d60921b60448201526064016102a4565b60058054600160a01b60ff60a01b198216179091556001546004805460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af115801561044c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610470919061077c565b6104b45760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016102a4565b60408051338152602081018390527f0a4faf42a072190da8e63181188040fe68178ee1900cc648968012688226447f91016102d9565b60035442116105325760405162461bcd60e51b8152602060048201526014602482015273151a5b595b1bd8dac81b9bdd08195e1c1a5c995960621b60448201526064016102a4565b6000546001600160a01b031633146105855760405162461bcd60e51b815260206004820152601660248201527513db9b1e481cd95b99195c8818d85b881c99599d5b9960521b60448201526064016102a4565b600554600160a01b900460ff16156105d25760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b60448201526064016102a4565b600554600160a81b900460ff161561061f5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c99599d5b99195960821b60448201526064016102a4565b60058054600160a81b60ff60a81b198216179091556000546004805460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae919061077c565b6106ea5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016102a4565b6040517feca32268c495f4202277ddc0853891e19ad3250bd98fd2b2aaba02d05d13ede490600090a1565b602081526000825180602084015260005b818110156107435760208186018101516040868401015201610726565b506000604082850101526040601f19601f83011684010191505092915050565b60006020828403121561077557600080fd5b5035919050565b60006020828403121561078e57600080fd5b8151801515811461079e57600080fd5b939250505056fea26469706673582212205a3d0b3e2a003c6f03d84fc229267f796af0da6c8979a1c69e229f6cb80824e064736f6c634300081e0033a26469706673582212206b43b55be9db265b0da5ecf9d7adf874060a64ef9223796c481ca87eea61055c64736f6c634300081e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633b3c02501461005c5780639ac9b2341461008c578063d6cfeae01461009f578063d81671bc146100b4578063da8b673f146100c5575b600080fd5b61006f61006a36600461062e565b6100da565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f61009a36600461062e565b610150565b6100a761017a565b6040516100839190610647565b600054604051908152602001610083565b6100d86100d33660046106af565b6101dc565b005b6000805482106101225760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b60448201526064015b60405180910390fd5b60008281548110610135576101356106fd565b6000918252602090912001546001600160a01b031692915050565b6000818154811061016057600080fd5b6000918252602090912001546001600160a01b0316905081565b606060008054806020026020016040519081016040528092919081815260200182805480156101d257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101b4575b5050505050905090565b600081116102365760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b6064820152608401610119565b6001600160a01b03831661028c5760405162461bcd60e51b815260206004820152601a60248201527f526563656976657220616464726573732072657175697265642e0000000000006044820152606401610119565b6001600160a01b0382166102e25760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616464726573732072657175697265642e0000000000000000006044820152606401610119565b600084116103325760405162461bcd60e51b815260206004820152601a60248201527f54696d656c6f636b206d75737420626520706f7369746976652e0000000000006044820152606401610119565b6040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190610713565b61041d5760405162461bcd60e51b815260206004820152603c60248201527f546f6b656e207472616e736665722066726f6d207573657220746f206661637460448201527f6f7279206661696c65642e20436865636b20616c6c6f77616e63652e000000006064820152608401610119565b600033878787878760405161043190610621565b6001600160a01b039687168152602081019590955260408501939093529084166060840152909216608082015260a081019190915260c001604051809103906000f080158015610485573d6000803e3d6000fd5b5060405163a9059cbb60e01b81526001600160a01b038083166004830152602482018690529192509083169063a9059cbb906044016020604051808303816000875af11580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610713565b61056f5760405162461bcd60e51b815260206004820152603860248201527f546f6b656e207472616e736665722066726f6d20666163746f727920746f206e60448201527f6577207377617020636f6e7472616374206661696c65642e00000000000000006064820152608401610119565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383811691909117909155848116908616337f63ddfe275c04d4adf4185de83aad2f6b1eb299f299177fad015f6c039cb79b8d84876105f08c4261073c565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a450505050505050565b610aee8061076483390190565b60006020828403121561064057600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b818110156106885783516001600160a01b0316835260209384019390920191600101610661565b509095945050505050565b80356001600160a01b03811681146106aa57600080fd5b919050565b600080600080600060a086880312156106c757600080fd5b85359450602086013593506106de60408701610693565b92506106ec60608701610693565b949793965091946080013592915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561072557600080fd5b8151801515811461073557600080fd5b9392505050565b8082018082111561075d57634e487b7160e01b600052601160045260246000fd5b9291505056fe608060405234801561001057600080fd5b50604051610aee380380610aee83398101604081905261002f91610277565b6001600160a01b03861661007b5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b2b73232b960911b60448201526064015b60405180910390fd5b6001600160a01b0383166100c45760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b1b2b4bb32b960811b6044820152606401610072565b6001600160a01b03821661010a5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610072565b6000811161014f5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610072565b6000841161019f5760405162461bcd60e51b815260206004820152601960248201527f54696d656c6f636b206d75737420626520706f736974697665000000000000006044820152606401610072565b600080546001600160a01b038089166001600160a01b031992831617909255600180549286169290911691909117905560028590556101de84426102dd565b6003819055600580546001600160a01b0319166001600160a01b038581169182179092556004849055604080518981526020810194909452830184905291858216918916907f2fdb6f62c0073da0eca287e922e0d8a00b5fc3ccf52e955d67cdc42bb83e23299060600160405180910390a4505050505050610304565b80516001600160a01b038116811461027257600080fd5b919050565b60008060008060008060c0878903121561029057600080fd5b6102998761025b565b60208801516040890151919750955093506102b66060880161025b565b92506102c46080880161025b565b9150600060a08801519050809150509295509295509295565b808201808211156102fe57634e487b7160e01b600052601160045260246000fd5b92915050565b6107db806103136000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063aa8c217c11610071578063aa8c217c14610161578063c72b61be1461016a578063c80ec52214610172578063d33219b414610186578063f7260d3e1461018f578063fc0c546a146101a257600080fd5b806312f53950146100b9578063153127ce146100e257806360307545146100f757806367e404ce1461010c57806392654efa14610137578063a782086e1461014a575b600080fd5b6005546100cd90600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6100ea6101b5565b6040516100d99190610715565b61010a610105366004610763565b610245565b005b60005461011f906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b61010a610145366004610763565b6102e4565b61015360025481565b6040519081526020016100d9565b61015360045481565b61010a6104ea565b6005546100cd90600160a01b900460ff1681565b61015360035481565b60015461011f906001600160a01b031681565b60055461011f906001600160a01b031681565b600554606090600160a01b900460ff16156101ee575060408051808201909152600981526810dbdb5c1b195d195960ba1b602082015290565b600554600160a81b900460ff161561022357506040805180820190915260088152671499599d5b99195960c21b602082015290565b5060408051808201909152600781526650656e64696e6760c81b602082015290565b60025460408051602081018490520160405160208183030381529060405280519060200120146102ad5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081cd958dc995d60921b60448201526064015b60405180910390fd5b6040518181527f9b7ddc883342824bd7ddbff103e7a69f8f2e60b96c075cd1b8b8b9713ecc75a4906020015b60405180910390a150565b600554600160a01b900460ff16156103315760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b60448201526064016102a4565b600554600160a81b900460ff161561037e5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c99599d5b99195960821b60448201526064016102a4565b60025460408051602081018490520160405160208183030381529060405280519060200120146103e15760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081cd958dc995d60921b60448201526064016102a4565b60058054600160a01b60ff60a01b198216179091556001546004805460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af115801561044c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610470919061077c565b6104b45760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016102a4565b60408051338152602081018390527f0a4faf42a072190da8e63181188040fe68178ee1900cc648968012688226447f91016102d9565b60035442116105325760405162461bcd60e51b8152602060048201526014602482015273151a5b595b1bd8dac81b9bdd08195e1c1a5c995960621b60448201526064016102a4565b6000546001600160a01b031633146105855760405162461bcd60e51b815260206004820152601660248201527513db9b1e481cd95b99195c8818d85b881c99599d5b9960521b60448201526064016102a4565b600554600160a01b900460ff16156105d25760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b60448201526064016102a4565b600554600160a81b900460ff161561061f5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c99599d5b99195960821b60448201526064016102a4565b60058054600160a81b60ff60a81b198216179091556000546004805460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae919061077c565b6106ea5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016102a4565b6040517feca32268c495f4202277ddc0853891e19ad3250bd98fd2b2aaba02d05d13ede490600090a1565b602081526000825180602084015260005b818110156107435760208186018101516040868401015201610726565b506000604082850101526040601f19601f83011684010191505092915050565b60006020828403121561077557600080fd5b5035919050565b60006020828403121561078e57600080fd5b8151801515811461079e57600080fd5b939250505056fea26469706673582212205a3d0b3e2a003c6f03d84fc229267f796af0da6c8979a1c69e229f6cb80824e064736f6c634300081e0033a26469706673582212206b43b55be9db265b0da5ecf9d7adf874060a64ef9223796c481ca87eea61055c64736f6c634300081e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createSwap(bytes32,uint256,address,address,uint256)": {
        "params": {
          "amount": "Cantidad de tokens a intercambiar.",
          "hashlock": "El hash keccak256 del secreto compartido.",
          "receiver": "Dirección que recibirá los tokens si presenta el secreto.",
          "timelockSeconds": "Duración del timelock en segundos.",
          "tokenAddress": "Dirección del contrato del token ERC-20 a intercambiar."
        }
      }
    },
    "title": "SwapFactory para desplegar y gestionar instancias de FusionSwapIntentERC20",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createSwap(bytes32,uint256,address,address,uint256)": {
        "notice": "Crea una nueva instancia del contrato FusionSwapIntentERC20.         El usuario (msg.sender) debe haber APROBADO previamente         que esta Factory pueda gastar sus 'amount' de 'tokenAddress'."
      }
    },
    "notice": "Permite la creación estandarizada de nuevos swaps atómicos ERC-20         y centraliza el depósito inicial de tokens del usuario.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 370,
        "contract": "contracts/SwapFactory.sol:SwapFactory",
        "label": "allSwaps",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}